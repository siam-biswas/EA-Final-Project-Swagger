/*
 * EAFinalProjectLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package localhost8089.controllers;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

import localhost8089.ApiHelper;
import localhost8089.EAFinalProjectClient;
import localhost8089.exceptions.ApiException;
import localhost8089.models.AddRatingRequest;
import localhost8089.models.UpdateRatingRequest;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;

public class RatingServiceControllerTest extends BaseControllerTest {

    /**
     * Client instance.
     */
    private static EAFinalProjectClient client;
    
    /**
     * Controller instance (for all tests).
     */
    private static RatingServiceController controller;

    /**
     * Setup test class.
     */
    @BeforeClass
    public static void setUpClass() {
        client = createConfiguration();
        controller = client.getRatingServiceController();
    }

    /**
     * Tear down test class.
     */
    @AfterClass
    public static void tearDownClass() {
        controller = null;
    }

    /**
     * Test case for Get Ratings.
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testGetRatings() throws Exception {

        // Set callback and perform API call
        try {
            controller.getRatings();
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

    }

    /**
     * Test case for Get Rating.
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testGetRating() throws Exception {

        // Set callback and perform API call
        try {
            controller.getRating();
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

    }

    /**
     * Test case for Add Rating.
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testAddRating() throws Exception {
        // Parameters for the API call
        AddRatingRequest body = ApiHelper.deserialize(
                "{\r\n  \"userId\": 1,\r\n  \"content\": {\r\n    \"contentId\": 2,\r\n    \"conten"
                + "tType\": 1\r\n  },\r\n  \"value\": 4\r\n}",
                AddRatingRequest.class);

        // Set callback and perform API call
        try {
            controller.addRating(body);
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

    }

    /**
     * Test case for Update Rating.
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testUpdateRating() throws Exception {
        // Parameters for the API call
        UpdateRatingRequest body = ApiHelper.deserialize(
                "{\r\n  \"id\": 2,\r\n  \"userId\": 1,\r\n  \"content\": {\r\n    \"contentId\": 2,"
                + "\r\n    \"contentType\": 1\r\n  },\r\n  \"value\": 3\r\n}",
                UpdateRatingRequest.class);

        // Set callback and perform API call
        try {
            controller.updateRating(body);
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

    }

    /**
     * Test case for Delete Rating.
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testDeleteRating() throws Exception {

        // Set callback and perform API call
        try {
            controller.deleteRating();
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

    }

}
